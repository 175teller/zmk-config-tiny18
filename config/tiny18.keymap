#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5


/ {
    combos {
        compatible = "zmk,combos";
        combo_q {
            timeout-ms = <50>;
            key-positions = <11 12>;
			layers = <0>;
            bindings = <&kp Q>;
        };

        combo_f {
            timeout-ms = <50>;
            key-positions = <10 11>;
			layers = <0>;
            bindings = <&kp F>;
        };

        combo_g {
            timeout-ms = <50>;
            key-positions = <13 14>;
			layers = <0>;
            bindings = <&kp G>;
        };

        combo_y {
            timeout-ms = <50>;
            key-positions = <0 1>;
			layers = <0>;
            bindings = <&kp Y>;
        };

        combo_p {
            timeout-ms = <50>;
            key-positions = <1 2>;
			layers = <0>;
            bindings = <&kp P>;
        };

        combo_J {
            timeout-ms = <50>;
            key-positions = <3 4>;
			layers = <0>;
            bindings = <&kp J>;
        };
    };



    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E  &kp R                        &kp T          &kp Y        &kp U                        &kp I      &kp O    &kp P          &kp BACKSPACE
&kp LCTRL       &kp A  &kp S  &kp D  &kp F                        &kp G          &kp H        &kp J                        &kp K      &kp L    &kp SEMICOLON  &kp ENTER
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C  &kp V                        &kp B          &kp N        &kp M                        &kp COMMA  &kp DOT  &kp SLASH      &kp LEFT_ALT
                                     &lt_to_layer_0 3 LANG_HANJA  &lt 2 SPACE    &lt 1 SPACE  &lt_to_layer_0 3 LANGUAGE_1
            >;
        };

        layer_1 {
            bindings = <
				&lt NAV W  &kp E     &kp R                                     &kp U     &kp I        &kp O
				&kp A      &kp S     &kp D     &kp T                 &kp H     &kp K     &lt SYMBL L  &kp ENTER
				                     &kp Z     &kp B                 &kp N     &kp M
            >;
        };

        layer_2 {
            bindings = <
				&trans     &trans     &trans                                       &trans     &trans     &trans
				&trans     &trans     &trans     &trans                 &trans     &trans     &trans     &trans
				                      &trans     &trans                 &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
				&trans     &trans     &trans                                       &trans     &trans     &trans
				&trans     &trans     &trans     &trans                 &trans     &trans     &trans     &trans
				                      &trans     &trans                 &trans     &trans
            >;
        };

        layer_4 {
            bindings = <
				&trans     &trans     &trans                                       &trans     &trans     &trans
				&trans     &trans     &trans     &trans                 &trans     &trans     &trans     &trans
				                      &trans     &trans                 &trans     &trans
            >;
        };

        layer_5 {
            bindings = <
				&trans     &trans     &trans                                       &trans     &trans     &trans
				&trans     &trans     &trans     &trans                 &trans     &trans     &trans     &trans
				                      &trans     &trans                 &trans     &trans
            >;
        };

        layer_6 {
            bindings = <
				&trans     &trans     &trans                                       &trans     &trans     &trans
				&trans     &trans     &trans     &trans                 &trans     &trans     &trans     &trans
				                      &trans     &trans                 &trans     &trans
            >;
        };
    };

