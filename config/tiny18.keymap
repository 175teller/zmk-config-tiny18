#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        q {
            bindings = <&kp Q>;
            key-positions = <1 0>;
            layers = <0>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <1 2>;
            layers = <0>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <12 11>;
            layers = <0>;
        };

        p {
            bindings = <&kp P>;
            key-positions = <4 5>;
            layers = <0>;
        };

        b {
            bindings = <&kp B>;
            key-positions = <16 17>;
            layers = <0>;
        };

        j {
            bindings = <&kp J>;
            key-positions = <3 4>;
            layers = <0>;
        };

        lang2 {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <11 4>;
            layers = <0>;
        };

        lang1 {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <12 5>;
            layers = <0>;
        };

        tab {
            timeout-ms = <35>;
            bindings = <&kp TAB>;
            key-positions = <6 7>;
            layers = <0>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <10 16>;
            layers = <0 1 2 3 4>;
        };

        backspace {
            bindings = <&mt RCTRL BACKSPACE>;
            key-positions = <5 13>;
            layers = <0 1 2 3 4>;
        };

        x {
            bindings = <&kp X>;
            key-positions = <14 15>;
            layers = <0>;
        };

        c {
            bindings = <&kp C>;
            key-positions = <15 16>;
            layers = <0>;
        };

        f {
            bindings = <&kp F>;
            key-positions = <7 0>;
            layers = <0>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <17 13>;
            layers = <0>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <14 6>;
            layers = <0>;
        };

        t {
            bindings = <&kp T>;
            key-positions = <2 9>;
            layers = <0>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <7 8>;
            layers = <0>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <8 9>;
            layers = <0>;
        };

        left {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <15 6>;
            layers = <0>;
        };

        right {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <13 16>;
            layers = <0>;
        };

        space {
            bindings = <&mt RIGHT_WIN SPACE>;
            key-positions = <12 13>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <1 8>;
            layers = <0>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <2 3>;
            layers = <0>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <9 10>;
            layers = <0>;
        };

        function1 {
            bindings = <&kp F1>;
            key-positions = <7 9>;
            layers = <0>;
        };

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <11 10>;
            layers = <0>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 6>;
            layers = <0>;
        };

        y {
            bindings = <&kp Y>;
            key-positions = <3 10>;
            layers = <0>;
        };

        volumeup {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <0 2>;
            layers = <0>;
        };

        volumedown {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <3 5>;
            layers = <0>;
        };

        function5 {
            bindings = <&kp F5>;
            key-positions = <9 15>;
            layers = <0>;
        };

        function2 {
            bindings = <&kp F2>;
            key-positions = <10 12>;
            layers = <0>;
        };

        function11 {
            bindings = <&kp F11>;
            key-positions = <10 11 12>;
            layers = <0>;
        };

        mb4 {
            bindings = <&mkp MB4>;
            key-positions = <0 1 2>;
            layers = <0>;
        };

        mb5 {
            bindings = <&mkp MB5>;
            key-positions = <3 4 5>;
            layers = <0>;
        };

        function3 {
            bindings = <&kp F3>;
            key-positions = <0 1>;
            layers = <1>;
        };

        function4 {
            bindings = <&kp F4>;
            key-positions = <1 2>;
            layers = <1>;
        };

        function6 {
            bindings = <&kp F6>;
            key-positions = <7 8>;
            layers = <1>;
        };

        function7 {
            bindings = <&kp F7>;
            key-positions = <8 9>;
            layers = <1>;
        };

        function8 {
            bindings = <&kp F8>;
            key-positions = <14 15>;
            layers = <1>;
        };

        function9 {
            bindings = <&kp F9>;
            key-positions = <0 6>;
            layers = <1>;
        };

        function10 {
            bindings = <&kp F10>;
            key-positions = <7 6>;
            layers = <1>;
        };

        function12 {
            bindings = <&kp F12>;
            key-positions = <6 14>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp W  &kp E  &kp R  &lt 1 U  &lt 2 I  &lt 3 O  &mt LCTRL A  &mt LEFT_SHIFT S  &mt LEFT_WIN D  &mt LEFT_ALT G  &lt 4 H  &lt 5 K  &mt RIGHT_ALT L  &mt RIGHT_SHIFT ENTER  &kp Z  &kp V  &kp N  &kp M
            >;
        };

        layer_1 {
            bindings = <
&kp N7  &kp N8  &kp N9  &trans  &kp UP_ARROW  &kp HOME  &kp N1  &kp N4  &kp N5  &kp N6  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &mt RIGHT_SHIFT ENTER  &kp N2  &kp N3  &kp N0  &kp END
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &bt BT_SEL 0  &bt BT_CLR  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &bt BT_SEL 1  &trans  &trans  &trans  &trans  &trans  &bt BT_SEL 2  &bt BT_SEL 3
            >;
        };
    };
};
