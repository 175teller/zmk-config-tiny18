#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        q {
            bindings = <&kp Q>;
            key-positions = <1 0>;
            layers = <0>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <1 2>;
            layers = <0>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <3 4>;
            layers = <0>;
        };

        p {
            bindings = <&kp P>;
            key-positions = <4 5>;
            layers = <0>;
        };

        b {
            bindings = <&kp B>;
            key-positions = <9 15>;
            layers = <0>;
        };

        j {
            bindings = <&kp J>;
            key-positions = <10 11>;
            layers = <0>;
        };

        lang2 {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <11 4>;
            layers = <0>;
        };

        lang1 {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <12 5>;
            layers = <0>;
        };

        tab {
            timeout-ms = <35>;
            bindings = <&kp TAB>;
            key-positions = <6 7>;
            layers = <0>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <10 16>;
            layers = <0 1 2 3 4>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 17>;
            layers = <0 1 2 3 4>;
        };

        x {
            bindings = <&kp X>;
            key-positions = <14 15>;
            layers = <0>;
        };

        c {
            bindings = <&kp C>;
            key-positions = <8 1>;
            layers = <0>;
        };

        f {
            bindings = <&kp F>;
            key-positions = <7 0>;
            layers = <0>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <17 13>;
            layers = <0>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <14 8>;
            layers = <0>;
        };

        t {
            bindings = <&kp T>;
            key-positions = <2 9>;
            layers = <0>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <7 8>;
            layers = <0>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <8 9>;
            layers = <0>;
        };

        left {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <10 17>;
            layers = <0>;
        };

        right {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <11 17>;
            layers = <0>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <12 13>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <14 6>;
            layers = <0>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <14 9>;
            layers = <0>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <15 6>;
            layers = <0>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <14 7>;
            layers = <0>;
        };

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <11 12>;
            layers = <0>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 6>;
            layers = <0>;
        };

        y {
            bindings = <&kp Y>;
            key-positions = <3 10>;
            layers = <0>;
        };

        volumeup {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <0 2>;
            layers = <0>;
        };

        volumedown {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <3 5>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp W  &kp E  &kp R  &lt 1 U  &lt 2 I  &lt 3 O  &mt LCTRL A  &mt LCTRL S  &mt LEFT_WIN D  &mt LEFT_ALT G  &lt 4 H  &lt 5 K  &mt RCTRL L  &mt RIGHT_SHIFT ENTER  &kp Z  &kp V  &kp N  &mt RIGHT_SHIFT M
            >;
        };

        layer_1 {
            bindings = <
&kp N7  &kp N8  &kp N9  &trans  &kp RCTRL  &kp DELETE  &kp N1  &kp N4  &kp N5  &kp N6  &kp RIGHT_ALT  &kp RIGHT_WIN  &kp BACKSPACE  &mt RIGHT_SHIFT ENTER  &kp N2  &kp N3  &kp N0  &kp SPACE
            >;
        };

        layer_2 {
            bindings = <
&mkp MB1  &kp UP_ARROW  &mkp MB2  &mmv MOVE_UP  &trans  &mmv MOVE_RIGHT  &mkp MB3  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &mmv MOVE_LEFT  &msc SCRL_LEFT  &mmv MOVE_DOWN  &msc SCRL_RIGHT  &mkp MB4  &mkp MB5  &msc SCRL_UP  &msc SCRL_DOWN
            >;
        };

        layer_3 {
            bindings = <
&kp F7  &kp F8  &kp F9  &trans  &trans  &trans  &kp F1  &kp F4  &kp F5  &kp F6  &trans  &trans  &trans  &kp F12  &kp F2  &kp F3  &kp F10  &kp F11
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &bt BT_SEL 0  &bt BT_CLR  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &bt BT_SEL 1  &trans  &trans  &trans  &trans  &trans  &bt BT_SEL 2  &bt BT_SEL 3
            >;
        };
    };
};
